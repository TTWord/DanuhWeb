name: TTWord CI/CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3.1.0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Generate ENV File
        run: |
          echo "ENV_MODE = $ENV_MODE" >> .env.production
          echo "SERVER_NAME = $SERVER_NAME" >> .env.production
        env:
          ENV_MODE: ${{ secrets.ENV_MODE }}
          SERVER_NAME: ${{ secrets.ENV_SERVER_NAME }}

      - name: Install dependencies
        run: npm install

      - name: Product Build
        run: npm run build

      - name: StoryBook Build
        run: yarn build-storybook

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to Main S3
        run: aws s3 sync dist/ s3://ttwordbucket

      - name: Upload to StoryBook S3
        run: aws s3 sync dist/ s3://danuh-storybook

      - name: Invalidate CloudFront cache
        run: |
          aws configure set preview.cloudfront true
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_ID }} --paths '/*'
          aws cloudfront create-invalidation --distribution-id ${{ secrets.STORYBOOK_CLOUDFRONT_ID }} --paths '/*'
